{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apimServiceName": {
      "type": "string"
    },
    "functionName": {
      "type": "string"
    },
    "serviceName": {
      "type": "string"
    }
  },
  "resources": [
    {
      "name": "[concat(parameters('apimServiceName'), '/', parameters('serviceName'))]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2019-01-01",
      "properties": {
        "displayName": "[parameters('serviceName')]",
        "path": "[parameters('serviceName')]",
        "protocols": [
          "https"
        ],
        "subscriptionRequired": false,
        "serviceUrl": "[concat('https://', parameters('functionName'), '.azurewebsites.net/api')]"
      }
    },    
    {
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2019-01-01",
      "name": "[concat(parameters('apimServiceName'), '/', parameters('serviceName'), '/policy')]",
      "dependsOn": [
          "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), parameters('serviceName'))]"
      ],
      "properties": {
          "value": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\r\n-->\r\n<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-backend-service base-url=\"https://th-show-dev-weu-func.azurewebsites.net/api/\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
          "format": "xml"
      }
    },
    {
      "name": "[concat(parameters('apimServiceName'), '/', parameters('serviceName'), '/post-creationorchestrator')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), parameters('serviceName'))]"
      ],
      "properties": {
        "description": "Some description about the API here",
        "displayName": "CreationOrchestrator",
        "method": "POST",
        "urlTemplate": "/show"
      }
    },
    {
      "name": "[concat(parameters('apimServiceName'), '/', parameters('serviceName'), '/get-getshow-imageobjects')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), parameters('serviceName'))]"
      ],
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "type": "Guid",
            "required": true
          }
        ],
        "description": "Description of the API here",
        "displayName": "GetShow_ImageObjects",
        "method": "GET",
        "urlTemplate": "/show/{id}/image"
      }
    },   
    {
      "name": "[concat(parameters('apimServiceName'), '/', parameters('serviceName'), '/get-getshow-newsobjects')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), parameters('serviceName'))]"
      ],
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "type": "Guid",
            "required": true
          }
        ],
        "description": "Description of the API",
        "displayName": "GetShow_NewsObjects",
        "method": "GET",
        "urlTemplate": "/show/{id}/news"
      }
    },
    {
      "name": "[concat(parameters('apimServiceName'), '/', parameters('serviceName'), '/get-getshow-showobjects')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), parameters('serviceName'))]"
      ],
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "type": "Guid",
            "required": true
          }
        ],
        "description": "Description of the API",
        "displayName": "GetShow_ShowObjects",
        "method": "GET",
        "urlTemplate": "/show/{id}/show"
      }
    },
    {
      "name": "[concat(parameters('apimServiceName'), '/', parameters('serviceName'), '/get-getshow-showsbyletter')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), parameters('serviceName'))]"
      ],
      "properties": {
        "templateParameters": [
          {
            "name": "letter",
            "type": "String",
            "required": true,
            "values": [
              "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "0-9"
            ]
          }
        ],
        "description": "Description of the API",
        "displayName": "GetShowsByLetter",
        "method": "GET",
        "urlTemplate": "/shows/{letter}"
      }
    },
    {
      "name": "[concat(parameters('apimServiceName'), '/', parameters('serviceName'), '/post-updateshow')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2019-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimServiceName'), parameters('serviceName'))]"
      ],
      "properties": {
        "description": "Description of the API",
        "displayName": "UpdateShow",
        "method": "POST",
        "urlTemplate": "/updateshow"
      }
    }
  ]
}